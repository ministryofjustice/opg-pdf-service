version: 2.1

workflows:
  pr-build-and-test:
    jobs:
      - pdf_serivce/test_pdf_service:
          name: test_pdf_service
      - pdf_service/docker_build_pdf_service:
          name: pdf_service_build
          requires: [test_pdf_service]

orbs:
  pdf_service:
    commnads:
      install_aws_cli:
        steps:
          - run:
              name: Install AWS CLI
              command: sudo pip 3 install awscli --upgrade
      ecr_login:
        steps:
          - run:
              name: Login to ECR
              command: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::311462405659:role/sirius-ci --role-session-name ci)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)
                eval $(aws ecr get-login --no-include-email --region=eu-west-1)
  executors:
    puppeteer:
      docker: [image: buildkite/puppeteer]
    python:
      docker: [image: circleci/python]


  jobs:
    test_pdf_service:
      executor: puppeteer
      steps:
        - checkout
        - run:
            name: Install dependencies
            command: npm install
        - run:
            name: Run tests with Jest
            command: mkdir -p ./test-results/junit && ./node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
        - store_test_results:
            path: app/test-results
        - store_artifacts:
            path: app/test-results/junit
        - run:
            name: Run coverage with Jest
            command: |
              mkdir -p /root/project/build/service-pdf
              ./node_modules/.bin/jest --ci --runInBand --collectCoverage=true
              cp -a ./coverage /root/project/build/service-pdf
        - store_test_results:
            path: build/service-pdf/
        - store_artifacts:
            path: build/service-pdf/
        - persist_to_workspace:
            root: build
            paths:
              - service-pdf/
            when: always

    docker_build_pdf_service:
      #
      # Build Docker container for PDF Generator
      #   and runs the Unit Tests.
      #
      executor: python
      parameters:
        container_repo_url:
          type: string
          default: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/pdf_service
      steps:
        - checkout
        - install_aws_cli
        - setup_remote_docker:
            version: 18.06.0-ce
            docker_layer_caching: false
        - run:
            name: Build
            command: |
              docker build --file docker/app/Dockerfile --tag pdf:latest .
        - ecr_login
        - run:
            name: Push container
            command: |
              export SHORT_HASH=${CIRCLE_SHA1:0:7} >> $BASH_ENV
              docker tag pdf_service:latest << parameters.container_repo_url >>:latest
              docker tag pdf_service:latest << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
              if [ "${CIRCLE_BRANCH}" == "master" ]; then
                # We want all of the tags pushed
                docker push << parameters.container_repo_url >>
              else
                docker push << parameters.container_repo_url >>:$CIRCLE_BRANCH-$SHORT_HASH
              fi